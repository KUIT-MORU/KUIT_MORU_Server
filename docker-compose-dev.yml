version: "3.8"

services:
  redis:
    image: redis:6.2-alpine
    container_name: redis-dev
    ports:
      - "6379:6379"
    networks:
      - temp

  back:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    restart: always
    ports:
      - "8000:8000"
    environment:
      TZ: Asia/Seoul

      # 활성화할 스프링 프로파일
      SPRING_PROFILES_ACTIVE: "dev"

      # MySQL
      SPRING_DATASOURCE_URL: >
        jdbc:mysql://${MYSQL_HOST}:${MYSQL_PORT}/${MYSQL_DATABASE}
        ?useSSL=false&characterEncoding=UTF-8&serverTimezone=Asia/Seoul
      SPRING_DATASOURCE_USERNAME: "${MYSQL_USERNAME}"
      SPRING_DATASOURCE_PASSWORD: "${MYSQL_PASSWORD}"

      # Redis
      SPRING_REDIS_HOST: "redis"
      SPRING_REDIS_PORT: "6379"

      # AWS
      AWS_ACCESS_KEY_ID: "${AWS_ACCESS_KEY_ID}"
      AWS_SECRET_ACCESS_KEY: "${AWS_SECRET_ACCESS_KEY}"
      SPRING_CLOUD_AWS_REGION_STATIC: "${AWS_REGION}"

      # JWT
      JWT_SECRET: "${JWT_SECRET}"

    depends_on:
      - redis
    networks:
      - temp

  nginx:
    image: nginx:stable-alpine
    container_name: nginx-dev
    depends_on:
      - back
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./certs/ip.crt:/etc/ssl/certs/ip.crt:ro
      - ./certs/ip.key:/etc/ssl/private/ip.key:ro
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - temp
    command:
      - java
      - -jar
      - app.jar
      - --spring.profiles.active=dev
      - --spring.redis.host=redis
      - --spring.redis.port=6379

networks:
  temp:
    driver: bridge
    attachable: true